<Application x:Class="WpfApp1.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:WpfApp1"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Color x:Key="KolorA">#A15</Color>
        <Color x:Key="staticButton">#DDF</Color>
        <Color x:Key="hoverButton">#99D</Color>
        <Color x:Key="clickedButton">#991</Color>
        <SolidColorBrush x:Key="A" Color="{DynamicResource KolorA}"/>
        <SolidColorBrush x:Key="static" Color="{DynamicResource staticButton}"/>
        <SolidColorBrush x:Key="hover" Color="{DynamicResource hoverButton}"/>
        <SolidColorBrush x:Key="clicked" Color="{DynamicResource clickedButton}"/>

        <Style
            x:Key="BoldAnd24"
            TargetType="Label"
            >
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontSize" Value="24" />
        </Style>
        <Style
            TargetType="Label"
            x:Key="LabelA"
            BasedOn="{StaticResource {x:Type Label}}"
            >
            <Setter Property="Background" Value="#900"/>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#DDF"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#DDF"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#99D"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#99D"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#99F"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#99F"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#DDF"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#DDF"/>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                     x:Name="border"
                     Background="{TemplateBinding Background}"
                     BorderBrush="{TemplateBinding BorderBrush}"
                     BorderThickness="{TemplateBinding BorderThickness}"
                     SnapsToDevicePixels="true"
                     >
                            <Border
                         x:Name="innerBorder"
                         BorderBrush="{TemplateBinding BorderBrush}"
                         BorderThickness="{TemplateBinding BorderThickness}"
                         Margin="{TemplateBinding BorderThickness}"
                         SnapsToDevicePixels="true"
                         >
                                <ContentPresenter
                             x:Name="contentPresenter"
                             Focusable="False"
                             HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                             Margin="{TemplateBinding Padding}"
                             RecognizesAccessKey="True"
                             SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                             VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                             />
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                <Setter Property="BorderBrush" TargetName="innerBorder" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                <Setter Property="BorderBrush" TargetName="innerBorder" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
